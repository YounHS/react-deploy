{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","style","color","fontFamily","role","roleDescription","socialLinks","map","item","url","target","name","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","toLowerCase","Porfolio","portfolio","imgurl","description","Testimonials","testimonials","ContactUs","linkedinId","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07c622a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return ( <\n            React.Fragment >\n\n            <\n            header id = \"home\" >\n            <\n            nav id = \"nav-wrap\" >\n            <\n            a className = \"mobile-btn\"\n            href = \"#nav-wrap\"\n            title = \"Show navigation\" > Show navigation < /a> <\n            a className = \"mobile-btn\"\n            href = \"#\"\n            title = \"Hide navigation\" > Hide navigation < /a> <\n            ul id = \"nav\"\n            className = \"nav\" >\n            <\n            li className = \"current\" > < a className = \"smoothscroll\"\n            href = \"#home\" > Home < /a></li >\n            <\n            li > < a className = \"smoothscroll\"\n            href = \"#about\" > About < /a></li >\n            <\n            li > < a className = \"smoothscroll\"\n            href = \"#resume\" > Resume < /a></li >\n            <\n            li > < a className = \"smoothscroll\"\n            href = \"#portfolio\" > Works < /a></li >\n            <\n            li > < a className = \"smoothscroll\"\n            href = \"#testimonials\" > Testimonials < /a></li >\n            <\n            li > < a className = \"smoothscroll\"\n            href = \"#contact\" > Contact < /a></li >\n            <\n            /ul> <\n            /nav>\n\n            <\n            div className = \"row banner\" >\n            <\n            div className = \"banner-text\" >\n            <\n            h1 className = \"responsive-headline\" > This is 'YounHS' < /h1> <\n            h3 style = {\n                { color: '#fff', fontFamily: 'sans-serif ' } } > I am a { resumeData.role }. { resumeData.roleDescription } <\n            /h3> <\n            hr / >\n            <\n            ul className = \"social\" > {\n                resumeData.socialLinks && resumeData.socialLinks.map(item => {\n                    return ( <\n                        li key = { item.name } >\n                        <\n                        a href = { item.url }\n                        target = \"_blank\" > < i className = { item.className } > < /i></a >\n                        <\n                        /li>\n                    )\n                })\n            } <\n            /ul> <\n            /div> <\n            /div>\n\n            <\n            p className = \"scrolldown\" >\n            <\n            a className = \"smoothscroll\"\n            href = \"#about\" > < i className = \"icon-down-circle\" > < /i></a >\n            <\n            /p>\n\n            <\n            /header> <\n            /React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n    render() {\n        let resumeData = this.props.resumeData;\n        return ( <\n            section id = \"portfolio\" >\n            <\n            div className = \"row\" >\n            <\n            div className = \"twelve columns collapsed\" >\n            <\n            h1 > PROJECT HISTORY < /h1> <\n            div id = \"portfolio-wrapper\"\n            className = \"bgrid-quarters s-bgrid-thirds cf\" > {\n                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                    return ( <\n                        div key = { `${item.name}` }\n                        className = \"columns portfolio-item\" >\n                        <\n                        div className = \"item-wrap\" >\n                        <\n                        a href = \"#modal-01\" >\n                        <\n                        img src = { `${item.imgurl}` }\n                        className = \"item-img\" / >\n                        <\n                        div className = \"overlay\" >\n                        <\n                        div className = \"portfolio-item-meta\" >\n                        <\n                        h5 > { item.name } < /h5> <\n                        p > { item.description } < /p> <\n                        /div> <\n                        /div> <\n                        /a> <\n                        /div> <\n                        /div>\n                    )\n                })\n            } <\n            /div> <\n            /div> <\n            /div> <\n            /section>\n        );\n    }\n}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>Linked in :\n                  {resumeData.linkedinId}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"imagebaseurl\": \"https://YounHS.github.io/\",\n    \"name\": \"Youn Hyeonsu\",\n    \"role\": \"SoftWare Engineer and Data Engineer who is oriented toward data science\",\n    \"linkedinId\": \"Your LinkedIn Id\",\n    \"skypeid\": \"Your skypeid\",\n    \"roleDescription\": \"I have experience in open source analysis, so I can learn new technology quickly. I like to analyze and visualize various data.\",\n    \"socialLinks\": [{\n            \"name\": \"linkedin\",\n            \"url\": \"https://www.linkedin.com/in/rahul-bhatia-67ba08121/\",\n            \"className\": \"fa fa-linkedin\"\n        },\n        {\n            \"name\": \"github\",\n            \"url\": \"http://github.com/rbhatia46\",\n            \"className\": \"fa fa-github\"\n        },\n        {\n            \"name\": \"skype\",\n            \"url\": \"http://twitter.com/rbhatia46\",\n            \"className\": \"fa fa-twitter\"\n        }\n    ],\n    \"aboutme\": \"I am currently working as a 'Technical Research Personnel' in Korea. I have gained experience by participating in various tasks such as REST API server development, STM32 embedded programming, and data analysis, etc... I am interested in Data Analysis. Based on this interest, I am making efforts to acquire Data Analysis-related technologies and certificates.\",\n    \"address\": \"Korea\",\n    \"website\": \"https://github.com/YounHS/\",\n    \"education\": [{\n            \"UniversityName\": \"Sejong University\",\n            \"specialization\": \"Computer Engineering\",\n            \"MonthOfPassing\": \"Feb\",\n            \"YearOfPassing\": \"2019\",\n            \"Achievements\": \"Master's degree\"\n        },\n        {\n            \"UniversityName\": \"Soongsil University\",\n            \"specialization\": \"Computer Engineering\",\n            \"MonthOfPassing\": \"Aug\",\n            \"YearOfPassing\": \"2016\",\n            \"Achievements\": \"Bachelor's degree\"\n        }\n    ],\n    \"work\": [{\n        \"CompanyName\": \"IMR Inc.\",\n        \"specialization\": \"Research and Development\",\n        \"MonthOfLeaving\": \"NaN\",\n        \"YearOfLeaving\": \"NaN\",\n        \"Achievements\": \"Technical Research Personnel\"\n    }],\n    \"skillsDescription\": \"Skill Proficiency\",\n    \"skills\": [{\n            \"skillname\": \"Spring Framework\"\n        },\n        {\n            \"skillname\": \"Pandas\"\n        },\n        {\n            \"skillname\": \"Scikit-Learn\"\n        },\n        {\n            \"skillname\": \"PostGreSQL\"\n        },\n        {\n            \"skillname\": \"Docker\"\n        },\n        {\n            \"skillname\": \"Kubernetes\"\n        }\n    ],\n    \"portfolio\": [{\n            \"name\": \"project1\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/profilepic.jpg\"\n        },\n        {\n            \"name\": \"project2\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/portfolio/console.jpg\"\n        },\n        {\n            \"name\": \"project3\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/portfolio/judah.png\"\n        },\n        {\n            \"name\": \"project4\",\n            \"description\": \"mobileapp\",\n            \"imgurl\": \"images/portfolio/retrocam.jpg\"\n        }\n    ],\n    \"testimonials\": [{\n            \"description\": \"This is a sample testimonial\",\n            \"name\": \"Some technical guy\"\n        },\n        {\n            \"description\": \"This is a sample testimonial\",\n            \"name\": \"Some technical guy\"\n        }\n    ]\n}\n\nexport default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <Testimonials resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}